<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="Window">
        <Setter Property="Background"
                Value="#FFF0F0F0"></Setter>
        <Setter Property="Width"
                Value="Auto"></Setter>
        <Setter Property="Height"
                Value="Auto"></Setter>
        <Setter Property="FontFamily"
                Value="Arial"></Setter>
        <Setter Property="FontSize"
                Value="14"></Setter>
        <Setter Property="ShowInTaskbar"
                Value="False"></Setter>
        <Setter Property="RenderTransformOrigin"
                Value="0.5,0.5"></Setter>
        <Setter Property="SizeToContent"
                Value="WidthAndHeight"></Setter>
        <Setter Property="WindowStyle"
                Value="ThreeDBorderWindow"></Setter>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="ForceCursor"
                Value="False" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="3,0,3,0" />
        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Width"
                Value="350" />
        <Setter Property="MaxLength"
                Value="20"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type  PasswordBox}">
                    <Border x:Name="Bd"
                            Background="White"
                            BorderBrush="#97a8ac"
                            CornerRadius="4"
                            BorderThickness="2">
                        <ScrollViewer Margin="0"
                                      x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ListBorder"
                     Color="#828790" />
    <Storyboard x:Key="StoryboardEntrance">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetName="{x:Null}"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="490"
                                  KeySpline="1,0,0,1" />
            <SplineDoubleKeyFrame KeyTime="00:00:00.5000000"
                                  Value="-30"
                                  KeySpline="1,0,0,1" />
            <SplineDoubleKeyFrame KeyTime="00:00:00.8000000"
                                  Value="0"
                                  KeySpline="0,0,0,1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground"
                Value="#222222" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Margin"
                Value="3" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="FontSize"
                Value="15" />
    </Style>
    <!--Validation Styles-->
    <SolidColorBrush x:Key="TextColor"
                     Color="#444" />
    <SolidColorBrush x:Key="TextColorDisabled"
                     Color="#888" />
    <SolidColorBrush x:Key="TextBackColor"
                     Color="#FFF" />
    <SolidColorBrush x:Key="BorderColor"
                     Color="#97a8ac" />
    <SolidColorBrush x:Key="SolidBorderBrush"
                     Color="#ddd" />
    <LinearGradientBrush x:Key="LightBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#ddf"
                              Offset="0.0" />
                <GradientStop Color="#fff"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <!--Normal styled textbox-->
    <Style x:Key="textBoxNormalStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="ForceCursor"
                Value="False" />
        <Setter Property="Foreground"
                Value="{StaticResource TextColor}" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="3,0,3,0" />
        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Width"
                Value="350" />
        <Setter Property="MaxLength"
                Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{StaticResource TextBackColor}"
                            BorderBrush="{StaticResource BorderColor}"
                            x:Name="Bd"
                            CornerRadius="4"
                            BorderThickness="2">
                        <ScrollViewer Margin="0"
                                      x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Error-style textbox-->
    <Style x:Key="textBoxErrorStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="ForceCursor"
                Value="False" />
        <Setter Property="Foreground"
                Value="{StaticResource TextColor}" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="3,0,3,0" />
        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Width"
                Value="350" />
        <Setter Property="MaxLength"
                Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Name="test">
                        <Border Background="{StaticResource TextBackColor}"
                                BorderBrush="#d99"
                                x:Name="Bd"
                                CornerRadius="4"
                                BorderThickness="2">
                            <ScrollViewer Margin="0"
                                          x:Name="PART_ContentHost" />
                        </Border>
                        <Image Name="ErrorImage"
                               Width="24"
                               Height="24"
                               Margin="0,0,4,0"
                               HorizontalAlignment="Right">
                            <!-- Source="{ StaticResource error}"ToolTip="{Binding Path=ErrorMessage, ElementName=root"}-->
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <BitmapImage x:Key="error"
                 UriSource="error.png"></BitmapImage>
    <BitmapImage x:Key="info"
                 UriSource="info_.png"></BitmapImage>
    <BitmapImage x:Key="infogif"
                 UriSource="info.gif"></BitmapImage>
    <!--Info-style textbox-->
    <Style x:Key="textBoxInfoStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="ForceCursor"
                Value="False" />
        <Setter Property="Foreground"
                Value="{StaticResource TextColor}" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="3,0,3,0" />
        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Width"
                Value="350" />
        <Setter Property="MaxLength"
                Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Name="test">
                        <Border Background="{StaticResource TextBackColor}"
                                BorderBrush="{StaticResource BorderColor}"
                                x:Name="Bd"
                                CornerRadius="4"
                                BorderThickness="2">
                            <ScrollViewer Margin="0"
                                          x:Name="PART_ContentHost" />
                        </Border>
                        <Image Name="ErrorImage"
                               Width="23"
                               Height="23"
                               Margin="0,0,5,0"
                               HorizontalAlignment="Right">
                            <!-- Source="{StaticResource infogif}" ToolTip="{Binding Path=ErrorMessage, ElementName=root}"-->
                        </Image>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--A style for tooltips-->
    <Style x:Key="{x:Type ToolTip}"
           TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Name="Border"
                            Background="{StaticResource LightBrush}"
                            BorderBrush="{StaticResource SolidBorderBrush}"
                            BorderThickness="1">
                        <ContentPresenter Margin="4"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End Of Validation Styles-->
    <DataTemplate x:Key="AgeItemTemplate">
        <Border BorderThickness="0,0,0,0"
                BorderBrush="#6FBDE8">
            <TextBlock Margin="0"
                       VerticalAlignment="Center" />
        </Border>
    </DataTemplate>
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Background"
                Value="#ffffff" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Margin"
                Value="0,0,0,0" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            BorderThickness="0,0,0,1"
                            BorderBrush="#6FBDE8">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="#FF143c65" />
                            <Setter Property="Background"
                                    TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1"
                                                         StartPoint="0,0">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#FF75aac7"
                                                              Offset="0" />
                                                <GradientStop Color="#FF143c65"
                                                              Offset="1" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="#e0eff8" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0,1"
                                                         StartPoint="0,0">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#FF75aac7"
                                                              Offset="0" />
                                                <GradientStop Color="#FF143c65"
                                                              Offset="1" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="#FF143c65" />
                            <Setter Property="Foreground"
                                    Value="White" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="BackgroundBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF6FBDE8"
                              Offset="0" />
                <GradientStop Color="#FF4385BE"
                              Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HighlightBackgroundBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF97d3f3"
                              Offset="0" />
                <GradientStop Color="#FF4385BE"
                              Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BorderBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFAFDDF6"
                              Offset="0" />
                <GradientStop Color="#FF2969AA"
                              Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBorderBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF75aac7"
                              Offset="0" />
                <GradientStop Color="#FF143c65"
                              Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="GridViewColumnHeaderGripper"
           TargetType="Thumb">
        <Setter Property="Width"
                Value="14" />
        <Setter Property="Background"
                Value="#2e566b" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                        <Rectangle HorizontalAlignment="Center"
                                   Width="1"
                                   Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridViewColumnHeader}"
           TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="#FFFFFF" />
        <Setter Property="Padding"
                Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border Name="HeaderBorder"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="0,1,0,1"
                                BorderBrush="{StaticResource BorderBrush}"
                                Background="{StaticResource BackgroundBrush}">
                            <ContentPresenter Name="HeaderContent"
                                              Margin="0,0,0,1"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                               HorizontalAlignment="Right"
                               Margin="0,0,-9,0"
                               Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource HighlightBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="HeaderBorder"
                                    Property="Background"
                                    Value="{StaticResource PressedBorderBrush}" />
                            <Setter TargetName="HeaderContent"
                                    Property="Margin"
                                    Value="1,1,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="Floating">
                <Setter Property="Opacity"
                        Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="#60000000"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"
                                    BorderThickness="0,1,0,1"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    Background="{StaticResource BackgroundBrush}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
           TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Focusable="false">
                                <GridViewHeaderRowPresenter Margin="0,0,0,0"
                                                            Columns="{Binding Path=TemplatedParent.View.Columns,
											RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Local"
                                                    CanContentScroll="True"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False" />
                        </DockPanel>
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ListView}"
           TargetType="ListView">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border"
                            BorderThickness="1"
                            BorderBrush="#999999"
                            Background="#DFDFDF">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#BBBBBB" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Normal styled textbox-->
    <Style TargetType="{x:Type ComboBox }">
        <Setter Property="FontFamily"
                Value="Arial" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="ForceCursor"
                Value="False" />
        <Setter Property="Foreground"
                Value="{StaticResource TextColor}" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="3,0,3,0" />
        <Setter Property="Margin"
                Value="2" />
        <Setter Property="Width"
                Value="350" />
        <Setter Property="Height"
                Value="25" />
    </Style>
    <!--**************************
    * STYLE: MenuItem
    ************************** -->
    <SolidColorBrush x:Key="HighlightedBackgroundBrush"
                     Color="#FF797878" />
    <SolidColorBrush x:Key="MenuBackgroundBrush"
                     Color="#FF505050" />
    <SolidColorBrush x:Key="NormalBorderBrush"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="SolidMenuFontBrush"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="HighlightedText"
                     Color="#FFFFFFFF" />
    <Style x:Key="{x:Type Menu}"
           TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Margin"
                Value="5,2,5,2  " />
        <Setter Property="Foreground"
                Value="{StaticResource SolidMenuFontBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{StaticResource MenuBackgroundBrush}"
                            BorderBrush="{StaticResource MenuBackgroundBrush}"
                            BorderThickness="1">
                        <StackPanel ClipToBounds="True"
                                    Orientation="Horizontal"
                                    IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="Margin"
                Value="5,2,5,2  " />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0"
                                                  MinWidth="17"
                                                  Width="Auto"
                                                  SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuTextColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition x:Name="Col3"
                                                  Width="14" />
                            </Grid.ColumnDefinitions>
                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Grid.Column="0"
                                              Margin="4,0,6,0"
                                              x:Name="Icon"
                                              VerticalAlignment="Center"
                                              ContentSource="Icon" />
                            <!-- Glyph is a checkmark if needed for a checkable menu -->
                            <Grid Grid.Column="0"
                                  Visibility="Hidden"
                                  Margin="4,0,6,0"
                                  x:Name="GlyphPanel"
                                  VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath"
                                      VerticalAlignment="Center"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                      FlowDirection="LeftToRight" />
                            </Grid>
                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              x:Name="HeaderHost"
                                              RecognizesAccessKey="True"
                                              ContentSource="Header" />
                            <!-- Content for the menu IGT -->
                            <ContentPresenter Grid.Column="2"
                                              Margin="8,1,8,1"
                                              x:Name="IGTHost"
                                              ContentSource="InputGestureText"
                                              VerticalAlignment="Center" />
                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="3"
                                  Margin="4,0,6,0"
                                  x:Name="ArrowPanel"
                                  VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M0,0 L0,8 L4,4 z" />
                            </Grid>
                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Right"
                                   x:Name="SubMenuPopup"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border x:Name="SubMenuBorder"
                                        BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"
                                        BorderThickness="1"
                                        Padding="2,2,2,2">
                                    <Grid x:Name="SubMenu"
                                          Grid.IsSharedSizeScope="True">
                                        <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role"
                                 Value="TopLevelHeader">
                            <Setter Property="Padding"
                                    Value="6,1,6,1" />
                            <Setter Property="Placement"
                                    Value="Bottom"
                                    TargetName="SubMenuPopup" />
                            <Setter Property="MinWidth"
                                    Value="0"
                                    TargetName="Col0" />
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="Col3" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="Icon" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="GlyphPanel" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="IGTHost" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="ArrowPanel" />
                        </Trigger>
                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role"
                                 Value="TopLevelItem">
                            <Setter Property="Padding"
                                    Value="6,1,6,1" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="ArrowPanel" />
                        </Trigger>
                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role"
                                 Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top" />
                            <Setter Property="Padding"
                                    Value="0,2,0,2" />
                        </Trigger>
                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role"
                                 Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top" />
                            <Setter Property="Padding"
                                    Value="0,2,0,2" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="ArrowPanel" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation"
                                 Value="true">
                            <Setter Property="PopupAnimation"
                                    Value="None"
                                    TargetName="SubMenuPopup" />
                        </Trigger>
                        <!-- If no Icon is present the we collapse the Icon Content -->
                        <Trigger Property="Icon"
                                 Value="{x:Null}">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="Icon" />
                        </Trigger>
                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="GlyphPanel" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="Icon" />
                        </Trigger>
                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource HighlightedBackgroundBrush}"
                                    TargetName="Border" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource HighlightedText}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource NormalBorderBrush}"
                                    TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{StaticResource MenuBackgroundBrush}"
                                    TargetName="Border" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource SolidMenuFontBrush}" />
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource MenuBackgroundBrush}"
                                    TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--ScrollBars-->
    <!-- ScrollBar  This makes use of Thumb, RepeatButton and ScrollRepeatButton -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="false" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
                          Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="DecreaseRepeat"
                                      Style="{DynamicResource RepeatButtonStyle}"
                                      Command="ScrollBar.LineUpCommand"
                                      Background="{x:Null}"
                                      BorderBrush="{x:Null}"
                                      BorderThickness="0,0,0,0">
                            <Grid>
                                <Path x:Name="DecreaseArrow"
                                      StrokeThickness="1"
                                      Data="M 0 4 L 8 4 L 4 0 Z"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stroke="#FFFFFFFF"
                                      Margin="0.75,0,-0.757,0" />
                            </Grid>
                        </RepeatButton>
                        <!-- Track is a special layout container which sizes the thumb and the repeat button which do jump scrolling either side of it -->
                        <Track Grid.Row="1"
                               x:Name="PART_Track"
                               Orientation="Vertical"
                               IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource ThumbStyle}"
                                       Width="10" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp"
                                              Style="{DynamicResource ScrollRepeatButtonStyle}"
                                              Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown"
                                              Style="{DynamicResource ScrollRepeatButtonStyle}"
                                              Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Row="2"
                                      x:Name="IncreaseRepeat"
                                      Style="{DynamicResource RepeatButtonStyle}"
                                      Command="ScrollBar.LineDownCommand"
                                      Background="{x:Null}"
                                      BorderBrush="{x:Null}"
                                      BorderThickness="0,0,0,0">
                            <Grid>
                                <Path x:Name="IncreaseArrow"
                                      StrokeThickness="1"
                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stroke="#FFFFFFFF"
                                      Margin="0.75,0,-0.757,0" />
                            </Grid>
                        </RepeatButton>
                    </Grid>
                    <!-- This uses a single template for ScrollBar and rotate it to be Horizontal
					It also changes the commands so that the it does Left and Right instead of Up and Down Commands -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation"
                                 Value="Horizontal">
                            <!-- Rotate the ScrollBar from Vertical to Horizontal -->
                            <Setter Property="LayoutTransform"
                                    TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <!-- Track is bound to Orientation internally, so we need to rotate it back to Vertical -->
                            <Setter TargetName="PART_Track"
                                    Property="Orientation"
                                    Value="Vertical" />
                            <!-- Change the commands to do Horizontal commands -->
                            <Setter Property="Command"
                                    Value="ScrollBar.LineLeftCommand"
                                    TargetName="DecreaseRepeat" />
                            <Setter Property="Command"
                                    Value="ScrollBar.LineRightCommand"
                                    TargetName="IncreaseRepeat" />
                            <Setter Property="Command"
                                    Value="ScrollBar.PageLeftCommand"
                                    TargetName="PageDown" />
                            <Setter Property="Command"
                                    Value="ScrollBar.PageRightCommand"
                                    TargetName="PageUp" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Thumb Style - The Thumb is the draggable part of the Scrollbar -->
    <Style x:Key="{x:Type Thumb}"
           TargetType="{x:Type Thumb}"
           BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0,0,0,0"
                          x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch"
                                   x:Name="Rectangle"
                                   VerticalAlignment="Stretch"
                                   Width="Auto"
                                   Height="Auto"
                                   RadiusX="2"
                                   RadiusY="2"
                                   Fill="#FF414C6F"
                                   Stroke="#FFFFFFFF" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused"
                                 Value="True" />
                        <Trigger Property="IsMouseOver"
                                 Value="True" />
                        <Trigger Property="IsEnabled"
                                 Value="False" />
                        <Trigger Property="IsDragging"
                                 Value="True" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>